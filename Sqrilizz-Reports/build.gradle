plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'dev.sqrilizz'
version = '7.5'
archivesBaseName = 'Sqrilizz-Reports'

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://repo.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.bungeecord.org/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.10-R0.1-SNAPSHOT")
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.telegram:telegrambots:6.8.0'
    implementation 'net.dv8tion:JDA:5.0.0-beta.24'
    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    // Database pool
    implementation 'com.zaxxer:HikariCP:5.1.0'
    // SQLite and MySQL drivers
    implementation 'org.xerial:sqlite-jdbc:3.45.3.0'
    implementation 'com.mysql:mysql-connector-j:8.4.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.compilerArgs += ['-parameters']
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    manifest {
        attributes(
            'Multi-Release': 'true',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }
}

shadowJar {
    archiveClassifier.set('')
    
    // Include all dependencies without relocation to avoid issues
    mergeServiceFiles()
    
    // Exclude unnecessary files to reduce JAR size
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    
    manifest {
        attributes(
            'Multi-Release': 'true',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }
}

// Make build use shadowJar instead of jar
build.dependsOn shadowJar

tasks.named('runServer') {
    minecraftVersion("1.21.10")
}
